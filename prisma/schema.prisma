// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String           @id @default(uuid())
  firstname         String
  lastname          String
  email             String           @unique
  password          String
  reset_token       String?
  phone_number      String?
  hire_date         DateTime
  department_id     String?
  department        Department?      @relation(fields: [department_id], references: [id])
  employment_type   EmploymentType
  compensation_type CompensationType
  salary_rate       Float
  center_id         String?
  center            Center?          @relation(fields: [center_id], references: [id])
  created_at        DateTime         @default(now())
  updated_at        DateTime?
  roles             UserRole[]
}

enum EmploymentType {
  FULL_TIME
  PART_TIME
}

enum CompensationType {
  HOURLY
  SALARY
}

model Role {
  id          String           @id @default(uuid())
  name        String           @unique
  created_at  DateTime         @default(now())
  updated_at  DateTime?
  users       UserRole[]
  permissions RolePermission[]
}

model UserRole {
  user_id    String
  user       User      @relation(fields: [user_id], references: [id])
  role_id    String
  role       Role      @relation(fields: [role_id], references: [id])
  created_at DateTime  @default(now())
  updated_at DateTime?

  @@id([user_id, role_id])
}

model Permission {
  id         String           @id @default(uuid())
  name       String           @unique
  created_at DateTime         @default(now())
  updated_at DateTime?
  roles      RolePermission[]
}

model RolePermission {
  role_id       String
  role          Role       @relation(fields: [role_id], references: [id])
  permission_id String
  permission    Permission @relation(fields: [permission_id], references: [id])
  created_at    DateTime   @default(now())
  updated_at    DateTime?

  @@id([role_id, permission_id])
}

model Department {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime  @default(now())
  updated_at DateTime?
  User       User[]
  Program    Program[]
}

model Center {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime  @default(now())
  updated_at DateTime?
  User       User[]
}

model Program {
  id             String        @id @default(uuid())
  name           String
  code           String
  department_id  String
  department     Department    @relation(fields: [department_id], references: [id])
  from_date      DateTime
  to_date        DateTime
  income         Json[]
  supply_expense Json[]
  salary_expense Json[]
  status         ProgramStatus @default(DRAFTED)
  created_at     DateTime      @default(now())
  updated_at     DateTime?
}

enum ProgramStatus {
  PENDING
  REJECTED
  APPROVED
  DRAFTED
}
