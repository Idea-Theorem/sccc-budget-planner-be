#Ref: https://learn.microsoft.com/en-us/azure/devops/pipelines/ecosystems/python-webapp?view=azure-devops
#budget-planner-conn-name
trigger:
  branches:
    include:
      - '*'

jobs:
- job: Development
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/development') #Targeted branch
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    VENV_CACHE_FOLDER:  $(Pipeline.Workspace)/appenv
  steps:
  - script: |
      chmod +x ./CI/setup.sh
      ./CI/setup.sh $(VENV_CACHE_FOLDER)
      pwd
    displayName: Install requirements
  - task: Cache@2
    inputs:
      key: '"appenv" | "$(Agent.OS)"'
      restoreKeys: |
        "appenv" | "$(Agent.OS)"
      path: $(VENV_CACHE_FOLDER)
    displayName: Cache AppEnv
  - bash: |
      export WEB_APP_NAME=budget-planner-dev
      zip -r $WEB_APP_NAME.zip . -x '.??*'
      # Deploy
      chmod +x ./CI/deploy.sh
      ./CI/deploy.sh $AZ_TENANT $AZ_USER $AZ_PWD $WEB_APP_NAME $RSC_GROUP
    displayName: 'Deploy App to Azure Web App'
    env:
      AZ_TENANT: $(AZ_TENANT)
      AZ_USER: $(AZ_USER)
      AZ_PWD: $(AZ_PWD)
      RSC_GROUP: $(RSC_GROUP)
- job: Master
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main') #Targeted branch
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    VENV_CACHE_FOLDER:  $(Pipeline.Workspace)/appenv
  steps:
  - script: |
      chmod +x ./CI/setup.sh
      ./CI/setup.sh $(VENV_CACHE_FOLDER)
      pwd
    displayName: Install requirements
  - task: Cache@2
    inputs:
      key: '"appenv" | "$(Agent.OS)"'
      restoreKeys: |
        "appenv" | "$(Agent.OS)"
      path: $(VENV_CACHE_FOLDER)
    displayName: Cache AppEnv
  - bash: |
      export WEB_APP_NAME=bugeting-app
      zip -r $WEB_APP_NAME.zip . -x '.??*'
      # Deploy
      chmod +x ./CI/deploy.sh
      ./CI/deploy.sh $AZ_TENANT $AZ_USER $AZ_PWD $WEB_APP_NAME $RSC_GROUP
    displayName: 'Deploy App to Azure Web App'
    env:
      AZ_TENANT: $(AZ_TENANT)
      AZ_USER: $(AZ_USER)
      AZ_PWD: $(AZ_PWD)
      RSC_GROUP: $(RSC_GROUP)
